---
title: Virto Network
layout: index.liquid
---

<div class="sticky-hack"></div>
<nav>
	<a href="#home">{% include "virto_logo_small.svg" %}</a>
	<a href="#community">üó®Ô∏è Community</a>
	<a href="docs/whitepaper.html" data-status="draft">üìú Whitepaper</a>
</nav>

<section id="home">
	<figure id="logo" title="Virto Network">{% include "virto_logo.svg" %}</figure>
	<p>{{ site.data.index.description }}</p>
</section>

<section id="LIP">
	<article>
		<h2>Local Incentives Protocol</h2>
		<figure><img src="img/protocol.svg" alt="protocol summary"></figure>
		<p>{{ site.data.index.lip }}</p>
	</article>
</section>

<section id="communities">
	<article class="lip">
		<h2 data-img="img/comunidad.svg">Communities</h2>
		<p>{{ site.data.index.community }}</p>
		<div class="globe"></div>
	</article>
</section>

<section id="marketplaces">
	<article class="lip">
		<h2 data-img="img/marketplace.svg">Marketplaces</h2>
		<p>{{ site.data.index.marketplace }}</p>
		<ul class="carousel">
			{% for market in site.data.index.marketplace_list %}
			<li tabindex="-1">
				<figure class="logo"></figure>
				<a href="#">{{ market.name }}</a>
				<p>{{ market.desc }}</p>
			</li>
			{% endfor %}
		</ul>
	</article>
</section>

<section id="APIs">
	<article>
		<h2>De-Commerce APIs</h2>
		<p>{{ site.data.index.apis }}</p>
		<ul>
			{% for api in site.data.index.apis_list %}
			<li>
				<a href="https://github.com/virto-network/virto-apis">{{ api.name }}</a>
			</li>
			{% endfor %}
		</ul>
	</article>
</section>

<aside id="sponsors"></aside>

<footer>
	<a id="gh" title="Follow us on Github" href="https://github.com/virto-network">{% include "gh.svg" %} Check us on Github</a>
	<a id="community" href="https://matrix.to/#/#virto-network:virto.community">{% include "element.svg" %} Chat in our community!</a>
	<a href="mailto:contact@virto.team">{% include "email.svg" %} A formal message?</a>
</footer>

<script>
const $ = document.querySelector.bind(document),
	$$ = document.querySelectorAll.bind(document);
const addViewedClass = ([e], ob) => {
	e.target.classList.add('viewed');
	ob.unobserve(e.target);
};
const whenVisible = (elements, fn, opts) => {
	const ob = new IntersectionObserver(fn, opts);
	$$(elements).forEach(e => ob.observe(e));
};
const addSticky = ([br]) => 
	br.target.nextElementSibling.classList.toggle('sticky', br.intersectionRatio === 0);

whenVisible('main>section', addViewedClass, { threshold: 0.2 });
whenVisible('.sticky-hack', addSticky, { threshold: [0, 1] });
</script>
