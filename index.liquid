---
title: Virto Network
layout: default.liquid
---

<section id="home">
	<figure id="logo" title="Virto Network">{% include "virto_logo.svg" %}</figure>
	<p>{{ site.data.index.description }}</p>
</section>

<section id="LIP">
	<article>
		<h2>Local Incentives Protocol</h2>
		<figure><img src="img/protocol.svg" alt="protocol summary"></figure>
		<p>{{ site.data.index.lip }}</p>
	</article>
</section>

<section id="communities">
	<article class="lip">
		<h2 data-img="img/comunidad.svg">Communities</h2>
		<p>{{ site.data.index.community }}</p>
		<div class="globe"></div>
	</article>
</section>

<section id="marketplaces">
	<article class="lip">
		<h2 data-img="img/marketplace.svg">Marketplaces</h2>
		<p>{{ site.data.index.marketplace }}</p>
		<ul class="carousel">
			{% for market in site.data.index.marketplace_list %}
			<li>
				<figure class="logo"></figure>
				<a href="#">{{ market.name }}</a>
			</li>
			{% endfor %}
		</ul>
	</article>
</section>

<section id="APIs">
	<article>
		<h2>APIs for Marketplace buliders</h2>
		<p>{{ site.data.index.apis }}</p>
		<ul>
			{% for api in site.data.index.apis_list %}
			<li><a href="#">{{ api.name }}</a></li>
			{% endfor %}
		</ul>
	</article>
</section>

<script>
const $ = document.querySelector.bind(document), $$ = document.querySelectorAll.bind(document);
const highlightActive = elements => {
	elements.forEach(e => e.target.classList.toggle('visible', e.isIntersecting));
}
const addViewedClass = ([e], ob) => {
	e.target.classList.add('viewed');
	ob.unobserve(e.target);
};
const whenVisible = (elements, fn, opts) => {
	const ob = new IntersectionObserver(fn, opts);
	$$(elements).forEach(e => ob.observe(e));
}

whenVisible('.carousel li', highlightActive, { root: $('.carousel'),  threshold: 0.9 });
whenVisible('main>section', addViewedClass, { threshold: 0.2 });

// delay activation of card until scroll is likely to end
let isScrolling;
let lastVisible;
$('#marketplaces ul').addEventListener('scroll', e => {
	clearTimeout(isScrolling);
	isScrolling = setTimeout(() => requestAnimationFrame(() => {
		lastVisible?.classList.remove('active');
		lastVisible = e.target.querySelector('.visible');
		lastVisible?.classList.add('active')
	}), 66);
}, false);

</script>
